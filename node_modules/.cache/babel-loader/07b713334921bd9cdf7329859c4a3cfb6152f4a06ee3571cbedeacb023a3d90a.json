{"ast":null,"code":"var _jsxFileName = \"/Users/doaa/Desktop/React-To-Do-List/src/components/TodoForm.js\",\n  _s = $RefreshSig$();\n// components/TodoForm.js\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoForm = _ref => {\n  _s();\n  let {\n    addTodo\n  } = _ref;\n  const [newTodo, setNewTodo] = useState(\"\"); // State to store the input value\n\n  const handleAddTodo = e => {\n    e.preventDefault();\n    if (newTodo.trim()) {\n      addTodo(newTodo); // Call addTodo function passed as a prop\n      setNewTodo(\"\"); // Clear input field after adding\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleAddTodo,\n    className: \"todo-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newTodo,\n      onChange: e => setNewTodo(e.target.value),\n      placeholder: \"Add a new todo\",\n      className: \"todo-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"add-button\",\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoForm, \"oyCy+yC4LrN9rT+2zASGlvYyUZ8=\");\n_c = TodoForm;\nexport default TodoForm;\nvar _c;\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TodoForm","_ref","_s","addTodo","newTodo","setNewTodo","handleAddTodo","e","preventDefault","trim","onSubmit","className","children","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/doaa/Desktop/React-To-Do-List/src/components/TodoForm.js"],"sourcesContent":["// components/TodoForm.js\nimport React, { useState } from \"react\";\n\nconst TodoForm = ({ addTodo }) => {\n  const [newTodo, setNewTodo] = useState(\"\"); // State to store the input value\n\n  const handleAddTodo = (e) => {\n    e.preventDefault();\n    if (newTodo.trim()) {\n      addTodo(newTodo); // Call addTodo function passed as a prop\n      setNewTodo(\"\"); // Clear input field after adding\n    }\n  };\n\n  return (\n    <form onSubmit={handleAddTodo} className=\"todo-form\">\n      <input\n        type=\"text\"\n        value={newTodo}\n        onChange={(e) => setNewTodo(e.target.value)}\n        placeholder=\"Add a new todo\"\n        className=\"todo-input\"\n      />\n      <button type=\"submit\" className=\"add-button\">\n        Add\n      </button>\n    </form>\n  );\n};\n\nexport default TodoForm;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGC,IAAA,IAAiB;EAAAC,EAAA;EAAA,IAAhB;IAAEC;EAAQ,CAAC,GAAAF,IAAA;EAC3B,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE5C,MAAMS,aAAa,GAAIC,CAAC,IAAK;IAC3BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIJ,OAAO,CAACK,IAAI,CAAC,CAAC,EAAE;MAClBN,OAAO,CAACC,OAAO,CAAC,CAAC,CAAC;MAClBC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;IAClB;EACF,CAAC;EAED,oBACEN,OAAA;IAAMW,QAAQ,EAAEJ,aAAc;IAACK,SAAS,EAAC,WAAW;IAAAC,QAAA,gBAClDb,OAAA;MACEc,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEV,OAAQ;MACfW,QAAQ,EAAGR,CAAC,IAAKF,UAAU,CAACE,CAAC,CAACS,MAAM,CAACF,KAAK,CAAE;MAC5CG,WAAW,EAAC,gBAAgB;MAC5BN,SAAS,EAAC;IAAY;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,eACFtB,OAAA;MAAQc,IAAI,EAAC,QAAQ;MAACF,SAAS,EAAC,YAAY;MAAAC,QAAA,EAAC;IAE7C;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX,CAAC;AAACnB,EAAA,CAzBIF,QAAQ;AAAAsB,EAAA,GAARtB,QAAQ;AA2Bd,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}